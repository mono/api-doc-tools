<Type Name="TestClassThree" FullName="mdoc.Test.SampleClasses.TestClassThree">
  <TypeSignature Language="C#" Value="public class TestClassThree : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;, System.Collections.Generic.IDictionary&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TestClassThree extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;string, class mdoc.Test.SampleClasses.TestClassTwo&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;, class System.Collections.IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>TestClass</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestClassThree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public mdoc.Test.SampleClasses.TestClassTwo this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class mdoc.Test.SampleClasses.TestClassTwo Item(string)" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>mdoc.Test.SampleClasses.TestClassTwo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Add" ExplicitInterfaceMemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;string,TestClassTwo&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class mdoc.Test.SampleClasses.TestClassTwo&gt; item) cil managed" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Clear" ExplicitInterfaceMemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;string,TestClassTwo&gt;&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Clear() cil managed" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Contains" ExplicitInterfaceMemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;string,TestClassTwo&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class mdoc.Test.SampleClasses.TestClassTwo&gt; item) cil managed" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.CopyTo" ExplicitInterfaceMemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;string,TestClassTwo&gt;&gt;.CopyTo (System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class mdoc.Test.SampleClasses.TestClassTwo&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="arrayIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Count" ExplicitInterfaceMemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Count">
      <MemberSignature Language="C#" Value="int System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.IsReadOnly" ExplicitInterfaceMemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Remove" ExplicitInterfaceMemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;string,TestClassTwo&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class mdoc.Test.SampleClasses.TestClassTwo&gt; item) cil managed" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;.Add" ExplicitInterfaceMemberName="System.Collections.Generic.IDictionary&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;.Add">
      <MemberSignature Language="C#" Value="void IDictionary&lt;string,TestClassTwo&gt;.Add (string key, mdoc.Test.SampleClasses.TestClassTwo value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IDictionary&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;.Add(string key, class mdoc.Test.SampleClasses.TestClassTwo value) cil managed" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="mdoc.Test.SampleClasses.TestClassTwo" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;.ContainsKey" ExplicitInterfaceMemberName="System.Collections.Generic.IDictionary&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;.ContainsKey">
      <MemberSignature Language="C#" Value="bool IDictionary&lt;string,TestClassTwo&gt;.ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.IDictionary&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;.ContainsKey(string key) cil managed" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;.Keys" ExplicitInterfaceMemberName="System.Collections.Generic.IDictionary&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;string&gt; System.Collections.Generic.IDictionary&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; System.Collections.Generic.IDictionary&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;.Remove" ExplicitInterfaceMemberName="System.Collections.Generic.IDictionary&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;.Remove">
      <MemberSignature Language="C#" Value="bool IDictionary&lt;string,TestClassTwo&gt;.Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.IDictionary&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;.Remove(string key) cil managed" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;.TryGetValue" ExplicitInterfaceMemberName="System.Collections.Generic.IDictionary&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;.TryGetValue">
      <MemberSignature Language="C#" Value="bool IDictionary&lt;string,TestClassTwo&gt;.TryGetValue (string key, out mdoc.Test.SampleClasses.TestClassTwo value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.IDictionary&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;.TryGetValue(string key, [out] class mdoc.Test.SampleClasses.TestClassTwo&amp; value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="mdoc.Test.SampleClasses.TestClassTwo" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;.Values" ExplicitInterfaceMemberName="System.Collections.Generic.IDictionary&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;mdoc.Test.SampleClasses.TestClassTwo&gt; System.Collections.Generic.IDictionary&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class mdoc.Test.SampleClasses.TestClassTwo&gt; System.Collections.Generic.IDictionary&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;mdoc.Test.SampleClasses.TestClassTwo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.GetEnumerator" ExplicitInterfaceMemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,TestClassTwo&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class mdoc.Test.SampleClasses.TestClassTwo&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;.GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,mdoc.Test.SampleClasses.TestClassTwo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
