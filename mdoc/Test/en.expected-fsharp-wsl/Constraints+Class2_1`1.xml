<Type Name="Constraints+Class2_1&lt;T&gt;" FullName="Constraints+Class2_1&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class Constraints.Class2_1&lt;T&gt; where T : IComparable, Exception" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable beforefieldinit Constraints/Class2_1`1&lt;(class System.IComparable, class System.Exception) T&gt; extends System.Object" />
  <TypeSignature Language="F#" Value="type Constraints.Class2_1&lt;'T (requires 'T :&gt; IComparable and 'T :&gt; Exception)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>mdoc.Test.FSharp</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <InterfaceName>System.IComparable</InterfaceName>
        <BaseTypeName>System.Exception</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.ObjectType)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Class2_1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
